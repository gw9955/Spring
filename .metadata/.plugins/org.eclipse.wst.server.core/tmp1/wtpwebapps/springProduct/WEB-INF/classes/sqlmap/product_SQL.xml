<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="product">
	<!-- PRODUCT 테이블에 insert -->
	<insert id="insert" parameterType="kr.or.ddit.vo.ProductVO">
		INSERT INTO PRODUCT(
			  PRODUCT_ID
			, PNAME
			, UNIT_PRICE
			, DESCRIPTION
			, MANUFACTURER
			, CATEGORY
			, UNITS_IN_STOCK
			, CONDITION) 
		VALUES(#{productId}
			, #{pname}
			, #{unitPrice}
			, #{description}
			, #{manufacturer}
			, #{category}
			, #{unitsInStock}
			, #{condition}
			)
	</insert>
	
 	<select id="list" parameterType="String" resultType="productVO">
 		SELECT PRODUCT_ID, PNAME, UNIT_PRICE, DESCRIPTION, MANUFACTURER
			, CATEGORY, UNITS_IN_STOCK, CONDITION, FILENAME
		FROM PRODUCT
		WHERE 1= 1
	<if test="keyWord!=null and keyWord!=''">
		AND (PNAME LIKE '%' || #{keyWord} || '%'
		OR CATEGORY LIKE '%' || #{keyWord} || '%')
	</if>
		ORDER BY PRODUCT_ID DESC
 	</select>
	
	 <!-- 상품 상세보기 -->
 	<select id="select_detail" parameterType="productVO" resultType="productVO">
 		SELECT PRODUCT_ID, PNAME, UNIT_PRICE, DESCRIPTION, MANUFACTURER
 		, CATEGORY, UNITS_IN_STOCK, FILENAME,CONDITION
		FROM PRODUCT
		WHERE PRODUCT_ID = #{productId}
 	</select>
 	
 	<!-- 상품 수정하기 update 태그는 SQL문을 실행하기 위한 마이바티스 태그 -->
 	<update id="update" parameterType="productVO">
 		UPDATE  PRODUCT
		SET     PNAME=#{pname},UNIT_PRICE=#{unitPrice},DESCRIPTION=#{description}
		,MANUFACTURER=#{manufacturer},CATEGORY=#{category},UNITS_IN_STOCK=#{unitsInStock}
		,CONDITION = #{condition}
		WHERE   PRODUCT_ID = #{productId}
 	</update>
 	
 	<!-- 상품 삭제하기 delete 태그는 삭제 SQL을 실행하기 위한 mybatis 태그
 		resultType="int" 생략 가능
 		
 		들어오는것 : int
 	 -->
 	<delete id="delete" parameterType="String">
 		DELETE FROM PRODUCT
		WHERE   PRODUCT_ID = #{productId}
 	</delete>
 	
 	<!-- CART 테이블에 insert 
 	들어오는것 : CartVO
 	나가는것 : 생략(insert/update/delete는 resultType="int"를 생략)
 	-->
 	<insert id="insertCart">
 		INSERT INTO CART(CART_ID, NAME, SHIPPING_DATE, COUNTRY, ZIP_CODE, 
 		ADDRESS_NAME, ADDRESS_DETAIL, REGIST_DT) 
		VALUES(#{cartId},#{name},#{shippingDate},#{country},#{zipCode},
		#{addressName},#{addressDetail},sysdate)
 	</insert>
 	
 	<!-- ATTACH 테이블에  insert
 	들어오는것 : List<AttachVO>
 	나가는것 : 생략
 	INTO ATTACH VALUES(1,'P1238','1',2,'jpeg',sysdate)
	INTO ATTACH VALUES(2,'P1238','2',2,'jpeg',sysdate)
	INTO ATTACH VALUES(3,'P1238','3',2,'jpeg',sysdate)
	SELECT * FROM SYS.DUAL
 	 -->
 	 <update id="insertAttach" parameterType="java.util.List">
 	 	<foreach collection="list" item="attachVO" open="INSERT ALL "
 	 		close="SELECT * FROM SYS.DUAL" separator=" ">
 	 		INTO ATTACH VALUES(#{attachVO.seq},#{attachVO.tid}
 	 		,#{attachVO.attachName},#{attachVO.attachSize},#{attachVO.attachType},sysdate)
 	 	</foreach>
 	 </update>
</mapper>
